analyzer:
  exclude:
    - "**/*.g.dart" # Ignore all files ending with .g.dart (common for generated files)
    - "**/*.freezed.dart" # Ignore files generated by freezed package (if applicable)
    - "**/*.generated.dart" # Ignore files specifically marked as generated

include: package:flutter_lints/flutter.yaml
# false positives|conflict|bug|always_specify_types|/issues

linter:
  rules:
    # - always_put_required_named_parameters_first # we prefer having parameters in the same order as fields https://github.com/flutter/flutter/issues/10219
    always_use_package_imports: true # we do this commonly
    # - avoid_annotating_with_dynamic # conflicts with always_specify_types
    avoid_catches_without_on_clauses: true # blocked on https://github.com/dart-lang/linter/issues/3023
    avoid_catching_errors: true # blocked on https://github.com/dart-lang/linter/issues/3023
    avoid_classes_with_only_static_members: true # we do this commonly for `abstract final class`es
    # - avoid_final_parameters # incompatible with prefer_final_parameters
    avoid_implementing_value_types: true # see https://github.com/dart-lang/linter/issues/4558
    avoid_multiple_declarations_per_line: true # seems to be a stylistic choice we don't subscribe to
    avoid_positional_boolean_parameters: true # would have been nice to enable this but by now there's too many places that break it
    # - avoid_private_typedef_functions # we prefer having typedef (discussion in https://github.com/flutter/flutter/pull/16356)
    # - avoid_returning_this # there are enough valid reasons to return `this` that this lint ends up with too many false positives
    # - avoid_types_on_closure_parameters # conflicts with always_specify_types
    avoid_web_libraries_in_flutter: true # we use web libraries in web-specific code, and our tests prevent us from using them elsewhere
    cascade_invocations: true # doesn't match the typical style of this repo
    # - close_sinks # not reliable enough
    comment_references: true # blocked on https://github.com/dart-lang/linter/issues/1142
    constant_identifier_names: true # needs an opt-out https://github.com/dart-lang/linter/issues/204
    deprecated_member_use_from_same_package: true # we allow self-references to deprecated members
    diagnostic_describe_all_properties: false # enabled only at the framework level (packages/flutter/lib)
    # - discarded_futures # too many false positives, similar to unawaited_futures
    do_not_use_environment: true # there are appropriate times to use the environment, especially in our tests and build logic
    join_return_with_assignment: true # not required by flutter style
    lines_longer_than_80_chars: false # not required by flutter style, (can't be automatically fixed, hence disabled)
    matching_super_parameters: false # blocked on https://github.com/dart-lang/language/issues/2509
    no_runtimeType_toString: true # ok in tests; we enable this only in packages/
    # - omit_local_variable_types # opposite of always_specify_types
    # - one_member_abstracts # too many false positives
    parameter_assignments: true # we do this commonly
    prefer_asserts_with_message: true # not required by flutter style
    # - prefer_constructors_over_static_methods # far too many false positives
    # - prefer_double_quotes # opposite of prefer_single_quotes
    prefer_expression_function_bodies: true # conflicts with https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#consider-using--for-short-functions-and-methods
    prefer_final_parameters: true # adds too much verbosity
    # - prefer_int_literals # conflicts with https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#use-double-literals-for-double-constants
    prefer_null_aware_method_calls: true # "call()" is confusing to people new to the language since it's not documented anywhere
    # - public_member_api_docs # enabled on a case-by-case basis; see e.g. packages/analysis_options.yaml (Preferred if have time)
    require_trailing_commas: true # would be nice, but requires a lot of manual work: 10,000+ code locations would need to be reformatted by hand after bulk fix is applied
    sort_pub_dependencies: true # prevents separating pinned transitive dependencies
    type_annotate_public_apis: true # subset of always_specify_types
    # - unawaited_futures # too many false positives, especially with the way AnimationController works
    # - unnecessary_final # conflicts with prefer_final_locals
    # - unnecessary_lambdas # has false positives: https://github.com/dart-lang/linter/issues/498
    unnecessary_raw_strings: true # what's "necessary" is a matter of opinion; consistency across strings can help readability more than this lint
    # - use_decorated_box # leads to bugs: DecoratedBox and Container are not equivalent (Container inserts extra padding)
    # - use_string_buffers # has false positives: https://github.com/dart-lang/sdk/issues/34182
    # - use_to_and_as_if_applicable # has false positives, so we prefer to catch this by code-review
